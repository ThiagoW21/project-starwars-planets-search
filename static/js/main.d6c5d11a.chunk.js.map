{"version":3,"sources":["context/MyContext.jsx","components/Row.jsx","components/Table.jsx","components/Option.jsx","components/Filters.jsx","services/fetchAPI.js","context/Provider.jsx","App.js","index.js"],"names":["MyContext","createContext","Row","planet","name","rotationPeriod","rotation_period","orbitalPeriod","orbital_period","diameter","climate","gravity","terrain","surfaceWater","surface_water","population","films","created","edited","url","data-testid","map","urlFilm","key","Table","useContext","data","fiterByName","filterByNumericValues","checkName","dataFiltered","filterPlanets","filter","value","comparison","column","valueInt","parseInt","compMaiorQue","compMenorQue","compIgualA","toLowerCase","includes","length","forEach","Option","option","Filters","handleChange","columns","handleClick","handleSelected","selectedValues","handleRemoveFilter","handleRemoveAllFilters","handleOrder","orderData","orders","type","onChange","id","htmlFor","operator","onClick","defaultValue","order","fetchAPI","a","fetch","then","response","json","results","Provider","children","useState","setData","setFilterByName","useEffect","responseSort","sort","b","getPlanets","setFilterByNumericValues","setOrder","setColumns","setValues","context","target","newColumns","prevState","newFilter","col","newData","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c5d11a.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport '../styles/Row.css';\n\nfunction Row({ planet }) {\n  const {\n    name,\n    rotation_period: rotationPeriod,\n    orbital_period: orbitalPeriod,\n    diameter,\n    climate,\n    gravity,\n    terrain,\n    surface_water: surfaceWater,\n    population,\n    films,\n    created,\n    edited,\n    url,\n  } = planet;\n\n  return (\n    <tr>\n      <td data-testid=\"planet-name\">{ name }</td>\n      <td>{ rotationPeriod }</td>\n      <td>{ orbitalPeriod }</td>\n      <td>{ diameter }</td>\n      <td>{ climate }</td>\n      <td>{ gravity }</td>\n      <td>{ terrain }</td>\n      <td>{ surfaceWater }</td>\n      <td>{ population }</td>\n      <td>{ films.map((urlFilm, key) => <span key={ key }>{ urlFilm }</span>) }</td>\n      <td>{ created }</td>\n      <td>{ edited }</td>\n      <td>{ url }</td>\n    </tr>\n  );\n}\n\nRow.propTypes = {\n  planet: PropTypes.objectOf(PropTypes.objectOf).isRequired,\n};\n\nexport default Row;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport Row from './Row';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const { data, fiterByName, filterByNumericValues } = useContext(MyContext);\n  const checkName = fiterByName.name !== '';\n  let dataFiltered = [...data];\n\n  function filterName() {\n    return data.filter(\n      (planet) => planet.name.toLowerCase().includes(fiterByName.name.toLowerCase()),\n    );\n  }\n\n  function compMaiorQue(column, value) {\n    dataFiltered = dataFiltered.filter((planet) => parseInt(planet[column], 10) > value);\n  }\n\n  function compMenorQue(column, value) {\n    dataFiltered = dataFiltered.filter((planet) => parseInt(planet[column], 10) < value);\n  }\n\n  function compIgualA(column, value) {\n    dataFiltered = dataFiltered.filter(\n      (planet) => parseInt(planet[column], 10) === value,\n    );\n  }\n\n  function filterPlanets(filter) {\n    const { value, comparison, column } = filter;\n    const valueInt = parseInt(value, 10);\n\n    if (comparison === 'maior que') {\n      compMaiorQue(column, valueInt);\n    } else if (comparison === 'menor que') {\n      compMenorQue(column, valueInt);\n    } else {\n      compIgualA(column, valueInt);\n    }\n  }\n\n  function filterNumeric() {\n    filterByNumericValues.forEach((filter) => {\n      filterPlanets(filter);\n    });\n  }\n\n  if (checkName) {\n    dataFiltered = filterName();\n  } else if (filterByNumericValues.length !== 0) {\n    filterNumeric();\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotatio Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Teerain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Filme</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>URL</th>\n        </tr>\n      </thead>\n      <tbody>\n        { data\n        && dataFiltered.map((planet, key) => <Row key={ key } planet={ planet } />) }\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Option({ option }) {\n  return (\n    <option>{ option }</option>\n  );\n}\n\nOption.propTypes = {\n  option: PropTypes.string.isRequired,\n};\n\nexport default Option;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport '../styles/Filters.css';\nimport Option from './Option';\n\nfunction Filters() {\n  const {\n    handleChange,\n    columns,\n    handleClick,\n    handleSelected,\n    selectedValues,\n    filterByNumericValues,\n    handleRemoveFilter,\n    handleRemoveAllFilters,\n    handleOrder,\n    orderData,\n  } = useContext(MyContext);\n\n  const operators = ['maior que', 'menor que', 'igual a'];\n  const orders = [\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ];\n\n  return (\n    <header>\n      <p>Projeto Star-Wars</p>\n      <input\n        type=\"text\"\n        onChange={ handleChange }\n        data-testid=\"name-filter\"\n        id=\"input-filter-name\"\n      />\n      <div>\n        <label htmlFor=\"column\">\n          <span>Coluna</span>\n          <br />\n          <select\n            id=\"column\"\n            name=\"column\"\n            onChange={ handleSelected }\n            data-testid=\"column-filter\"\n          >\n            {columns.map((column, key) => <Option key={ key } option={ column } />) }\n          </select>\n        </label>\n\n        <label htmlFor=\"operator\">\n          Operador\n          <br />\n          <select\n            id=\"operator\"\n            name=\"comparison\"\n            onChange={ handleSelected }\n            data-testid=\"comparison-filter\"\n            value={ selectedValues.comparison }\n          >\n            {operators.map(\n              (operator, key) => <Option key={ key } option={ operator } />,\n            ) }\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          onClick={ handleClick }\n          data-testid=\"button-filter\"\n        >\n          Filtrar\n\n        </button>\n        <input\n          id=\"input-number\"\n          type=\"number\"\n          name=\"value\"\n          value={ selectedValues.value }\n          onChange={ handleSelected }\n          data-testid=\"value-filter\"\n        />\n        <label htmlFor=\"order\">\n          Ordenar\n          <br />\n          <select\n            id=\"order\"\n            name=\"column\"\n            onChange={ handleOrder }\n            data-testid=\"column-sort\"\n            defaultValue={ orders[0] }\n          >\n            {orders.map(\n              (order, key) => <Option key={ key } option={ order } />,\n            ) }\n          </select>\n        </label>\n        <div id=\"radios-container\">\n          <label htmlFor=\"ASC\">\n            <input\n              name=\"sort\"\n              type=\"radio\"\n              onChange={ handleOrder }\n              id=\"ASC\"\n              value=\"ASC\"\n              data-testid=\"column-sort-input-asc\"\n            />\n            Ascendente\n          </label>\n          <label htmlFor=\"DESC\">\n            <input\n              name=\"sort\"\n              type=\"radio\"\n              value=\"DESC\"\n              onChange={ handleOrder }\n              id=\"DESC\"\n              data-testid=\"column-sort-input-desc\"\n            />\n            Descendente\n          </label>\n        </div>\n        <button\n          type=\"button\"\n          data-testid=\"column-sort-button\"\n          onClick={ orderData }\n        >\n          Ordenar\n\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={ handleRemoveAllFilters }\n          data-testid=\"button-remove-filters\"\n        >\n          Remover filtros\n\n        </button>\n      </div>\n      { filterByNumericValues.map((filter, key) => (\n        <div key={ key } data-testid=\"filter\">\n          <p>{`${filter.column} ${filter.comparison} ${filter.value}` }</p>\n          <button type=\"button\" onClick={ () => handleRemoveFilter(filter) }>X</button>\n        </div>\n      ))}\n    </header>\n  );\n}\n\nexport default Filters;\n","const fetchAPI = async () => {\n  const URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const { results } = await fetch(URL).then((response) => response.json());\n  return results;\n};\n\nexport default fetchAPI;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport fetchAPI from '../services/fetchAPI';\nimport MyContext from './MyContext';\n\nfunction Provider({ children }) {\n  const [data, setData] = useState([]);\n  const [fiterByName, setFilterByName] = useState({\n    name: '',\n  });\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      const response = await fetchAPI();\n      const num = -1;\n      const responseSort = response.sort((a, b) => (a.name < b.name ? num : true));\n      setData(responseSort);\n    };\n\n    getPlanets();\n  }, []);\n\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({\n    order: {\n      column: 'population',\n      sort: '',\n    },\n  });\n\n  const [columns, setColumns] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n\n  const [selectedValues, setValues] = useState({\n    column: columns[0],\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  function handleChange({ target }) {\n    const { value } = target;\n    setFilterByName({ name: value });\n  }\n\n  function handleClick() {\n    const newColumns = columns.filter((column) => column !== selectedValues.column);\n    setColumns(newColumns);\n\n    setFilterByNumericValues((prevState) => ([\n      ...prevState,\n      {\n        column: selectedValues.column,\n        comparison: selectedValues.comparison,\n        value: selectedValues.value,\n      },\n    ]));\n\n    setValues({\n      column: newColumns[0],\n      comparison: 'maior que',\n      value: 0,\n    });\n  }\n\n  function handleSelected({ target }) {\n    const { name, value } = target;\n    setValues((prevState) => ({ ...prevState, [name]: value }));\n  }\n\n  function handleRemoveFilter(filter) {\n    const { column } = filter;\n    setColumns((prevState) => [...prevState, column]);\n    const newFilter = filterByNumericValues.filter((col) => col.column !== column);\n    setFilterByNumericValues(newFilter);\n  }\n\n  function handleRemoveAllFilters() {\n    filterByNumericValues.map(\n      (filter) => setColumns((prevState) => [...prevState, filter.column]),\n    );\n    setFilterByNumericValues([]);\n  }\n\n  function handleOrder({ target }) {\n    const { name, value } = target;\n    setOrder((prevState) => ({ order: { ...prevState.order, [name]: value } }));\n  }\n\n  function orderData() {\n    const { column, sort } = order.order;\n    let newData = [];\n\n    if (sort === 'ASC') {\n      newData = data.sort((a, b) => (parseInt(a[column], 10) - parseInt(b[column], 10)));\n    } else {\n      newData = data.sort((a, b) => {\n        if (b[column] === 'unknown') {\n          return (parseInt(1, 10) - parseInt(a[column], 10));\n        }\n\n        return (parseInt(b[column], 10) - parseInt(a[column], 10));\n      });\n    }\n\n    setData([...newData]);\n  }\n\n  const context = {\n    data,\n    handleChange,\n    fiterByName,\n    setFilterByNumericValues,\n    columns,\n    handleClick,\n    handleSelected,\n    selectedValues,\n    filterByNumericValues,\n    handleRemoveFilter,\n    handleRemoveAllFilters,\n    handleOrder,\n    orderData,\n  };\n\n  return (\n    <MyContext.Provider value={ context }>\n      { children }\n    </MyContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nexport default Provider;\n","import React from 'react';\nimport Table from './components/Table';\nimport Filters from './components/Filters';\nimport Provider from './context/Provider';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Filters />\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}